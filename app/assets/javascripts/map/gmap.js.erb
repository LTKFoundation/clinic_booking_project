var map;
var poly;
var linePath;
var marker //var for new clinic marker
var clinic_lat = 0;
var clinic_lng = 0;
var clinic_name = "";
function setMarkerPosition(marker, position) {
  marker.setPosition(
    new google.maps.LatLng(
      position.coords.latitude,
      position.coords.longitude)
  );
}
function geocodePosition(pos) 
{
   geocoder = new google.maps.Geocoder();
   geocoder.geocode
  ({
    latLng: pos
  }, 
    function(results, status) 
    {
      if (status == google.maps.GeocoderStatus.OK) 
      {
        document.getElementById("clinic_address").value = results[0].formatted_address; 
      } 
      else 
      {
        console.log("Cannot determine address at this location."+status);
      }
    }
  );
}
//map for adding clinics
function initMapWithCurLoc() {
  map = new google.maps.Map(document.getElementById('map-canvas'), {
    zoom: 15
  });

  // Try HTML5 geolocation.
  
  if (navigator.geolocation) {
    var marker;
    navigator.geolocation.getCurrentPosition(function(position) {
      browser_loc = {
        lat: position.coords.latitude,
        lng: position.coords.longitude
      };
      document.getElementById("map-lat").value = browser_loc.lat;
      document.getElementById("map-lng").value = browser_loc.lng;
      // Displaying User's Current Location
      var user_window = new google.maps.InfoWindow({ content: "Bạn đang ở đây" });
      
      console.log("creating current location marker ");
      marker = createMarker(browser_loc, map, "Bạn đang ở đây",true);
      user_window.open(map, marker);
      google.maps.event.addListener(marker, 'click', function() {
        user_window.open(map, marker);
      });

      google.maps.event.addListener(marker, 'dragend', function() 
      {
        document.getElementById("map-lat").value = marker.getPosition().lat();
        document.getElementById("map-lng").value = marker.getPosition().lng();
        console.log("Marker moved to " + marker.getPosition().lat() + "||" + marker.getPosition().lng() + "...");
        geocodePosition(marker.getPosition());


      });
 
      map.setCenter(browser_loc);
      console.log("map set to center at: " + position.coords.latitude + "||" + position.coords.longitude);

    }, function() {
      var infoWindow = new google.maps.InfoWindow({ map: map });
      handleLocationError(true, infoWindow, map.getCenter(), "");
    });

    navigator.geolocation.watchPosition(function (position) {
      setMarkerPosition(
        marker, position
      );
    });
  } else {
    // Browser doesn't support Geolocation
    var infoWindow = new google.maps.InfoWindow({ map: map });
    handleLocationError(false, infoWindow, map.getCenter(), "");
  }
}

function addClinic(lat, lng) {
  console.log("passing New Clinic Data to controller " + lat + "||" + lng + "...");
  $.post('/clinics/add_clinic', { name: "Dr. Slum", latitude: lat, longtitude: lng, doctor_id:"-1", address:"somewhere over the rainbow" });
}

function showDoctor(lat, lng, clinic_name, clinic_add, dr_name, clinic_photo, clinic_id, gig_id, doctor_id, doctor_avatar) {
  var pos = {
    lat: lat,
    lng: lng
  };
  var marker = createCustomMarker(pos, map, dr_name, false);

  display_photo = doctor_avatar;
  if(display_photo==null)
  {
    display_photo = clinic_photo;
    if(display_photo==null)
    {
      display_photo = 'http://sainathchillapuram.com/BS/mediplus/demos/hospital/html-fullwidth/images/doctors/doctor-bio-img6.jpg';
    }
  }

    var contentString = 
'<div class="clinic col s12"> '+
'  <div class="card"> '+
'    <div class="card-image"> '+
        '<img class="clinic-photo" src="'+display_photo+'">'+
'    </div> '+
'    <div class="card-content"> '+
'      <div class="row"> '+
'        <div class="basic-info" style="margin-top: 10px;"> '+
'          <p> '+
'            <i class="material-icons">home</i> '+
'                <a href="/clinics/'+clinic_id+'">'+clinic_name+'</a> '+
'          </p> '+
'          <p> '+
'            <i class="material-icons">place</i>'+clinic_add+
'          </p></div></div></div></div></div>';

  if(dr_name!=null){
contentString = 
'<div class="clinic col s12"> '+
'  <div class="card"> '+
'    <div class="card-image"> '+
        '<img class="clinic-photo" src="'+display_photo+'">'+
'    </div> '+
'    <div class="card-content"> '+
'      <div class="row"> '+
'        <div class="basic-info" style="margin-top: 10px;"> '+
'          <p> '+
'            <i class="material-icons">home</i> '+
'                <a href="/clinics/'+clinic_id+'">'+clinic_name+'</a> '+
'          </p> '+
'          <p> '+
'            <i class="material-icons">account_circle</i> '+
'                <a href="/doctors/'+doctor_id+'">'+dr_name+'</a> '+
'          </p> '+
'          <p> '+
'            <i class="material-icons">place</i>'+clinic_add+
'          </p> '+
'          <p> '+
'                <a href="doctors/'+doctor_id+'/gigs/'+gig_id+'/client_view">Đặt khám ngay</a> '+
'          </p> '+
'</div></div></div></div></div>';
  }



  var user_window = new google.maps.InfoWindow({ content: contentString });
  <%#user_window.open(map, marker);%>
  google.maps.event.addListener(marker, 'click', function() {
    user_window.open(map, marker);
  });
}

function displayDoctors() {
  console.log("Displaying all doctor");
  a = gon.doctor_clinics;
    console.log("showing "+a.length+"clinics");
  if (a != null) {
    for (var i = 0; i < a.length; i++) {
            console.log("Doctor number " + i);
      var doctor = a[i];
      showDoctor(doctor[0], doctor[1], doctor[2], doctor[3], doctor[9], doctor[7], doctor[4], doctor[5], doctor[6], doctor[11]);
    }
  }
}

function refreshMap() {
  console.log("MAP REFRESHEEEEEDDDD!!!!!!!!!");
  displayDoctors();
}

function setLoc(lat, lng) {
  console.log("passing loc to controller#current_loc with value: " + lat + "||" + lng + "...");
    $.post('/clinics/current_loc', { latitude: lat, longtitude: lng }, refreshMap);
}

function handleLocationError(browserHasGeolocation, infoWindow, pos, message) {
  infoWindow.setPosition(pos);
  infoWindow.setContent(browserHasGeolocation ?
    'Error: The Geolocation service failed.' + message :
    'Error: Your browser doesn\'t support geolocation.' + message);
}
var browser_loc;

function getCurrentLoc() {
  console.log("getting current loc ...");
  var infoWindow = new google.maps.InfoWindow({ content: "Current Location" });
  // Try HTML5 geolocation.
  if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(function(position) {
      browser_loc = {
        lat: position.coords.latitude,
        lng: position.coords.longitude
      };
      //console.log("current log is:"+browser_loc[0]+"||"+browser_loc[1]);
    }, function(error) {
      handleLocationError(true, infoWindow, map.getCenter(), 'ERROR(' + err.code + '): ' + err.message);
    });
  } else {
    // Browser doesn't support Geolocation
    handleLocationError(false, infoWindow, map.getCenter(), "");
  }
}

function initMapWithNear() {
  var mapOptions = {
    center: new google.maps.LatLng(21.0278, 105.8342),
    zoom: 15,
    mapTypeId: google.maps.MapTypeId.NORMAL
  };
  // initializing map
  map = new google.maps.Map(document.getElementById("map-canvas"), mapOptions);

  // Try HTML5 geolocation.
  
  if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(function(position) {
      browser_loc = {
        lat: position.coords.latitude,
        lng: position.coords.longitude
      };
      console.log("found current loc! ");

      //setLoc(position.coords.latitude, position.coords.longitude);
            setLoc(position.coords.latitude, position.coords.longitude);

      // Displaying User's Current Location
      var user_window = new google.maps.InfoWindow({ content: "Bạn đang ở đây" });
      var marker;
      console.log("creating current location marker ");
      marker = createMarker(browser_loc, map, "Bạn đang ở đây",false);
      user_window.open(map, marker);
      google.maps.event.addListener(marker, 'click', function() {
        user_window.open(map, marker);
      });

      map.setCenter(browser_loc);
      console.log("map set to center at: " + position.coords.latitude + "||" + position.coords.longitude);

    }, function() {
      var infoWindow = new google.maps.InfoWindow({ map: map });
      handleLocationError(true, infoWindow, map.getCenter(), "");
    });
  } else {
    // Browser doesn't support Geolocation
    var infoWindow = new google.maps.InfoWindow({ map: map });
    handleLocationError(false, infoWindow, map.getCenter(), "");
  }

  google.maps.event.addListener(map, 'click', function(e) {
    var markerClinicDrop = createCustomMarker(getCurrentPosition(e), map, "New Clinic!", true);
    var dr_info = createInfoWindow("Phòng khám mới ở đây: " + e.latLng.lat() + "||" + e.latLng.lng());
    dr_info.open(map, markerClinicDrop);
    addClinic(e.latLng.lat(), e.latLng.lng())
  });
}

function initMapWithAll() {
  var mapOptions = {
    zoom: 15,
    mapTypeId: google.maps.MapTypeId.NORMAL
  };
  // initializing map
  map = new google.maps.Map(document.getElementById("map-canvas"), mapOptions);
    displayDoctors();
  // Try HTML5 geolocation.
  if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(function(position) {
      browser_loc = {
        lat: position.coords.latitude,
        lng: position.coords.longitude
      };
      console.log("found current loc! ");

      // Displaying User's Current Location
      var user_window = new google.maps.InfoWindow({ content: "Bạn đang ở đây" });
      var marker;
      console.log("creating current location marker ");
      marker = createMarker(browser_loc, map, "Bạn đang ở đây",true);
      user_window.open(map, marker);
      google.maps.event.addListener(marker, 'click', function() {
        user_window.open(map, marker);
      });

      map.setCenter(browser_loc);
      console.log("map set to center at: " + position.coords.latitude + "||" + position.coords.longitude);
    }, function(error) {
      console.log('ERROR(' + error.code + '): ' + error.message);
      var infoWindow = new google.maps.InfoWindow({ map: map });
      handleLocationError(true, infoWindow, map.getCenter(), 'ERROR(' + error.code + '): ' + error.message);
    });
  } else {
    // Browser doesn't support Geolocation
    var infoWindow = new google.maps.InfoWindow({ map: map });
    handleLocationError(false, infoWindow, map.getCenter(), "");
  }
}

function initBlankMapClinicLoc() {
  var mapOptions = {
    zoom: 15,
    mapTypeId: google.maps.MapTypeId.NORMAL
  };
  // initializing map
  map = new google.maps.Map(document.getElementById("map-canvas"), mapOptions);

  var clinicLoc = new google.maps.LatLng(clinic_lat, clinic_lng) 
  var pos = {
    lat: parseFloat(clinic_lat),
    lng: parseFloat(clinic_lng)
  };

  // Displaying User's Current Location
  var user_window = new google.maps.InfoWindow({ content: clinic_name });
  var marker = createCustomMarker(pos, map, clinic_name,true);
  user_window.open(map, marker);
  console.log("creating current location marker ");
  google.maps.event.addListener(marker, 'click', function() {
    user_window.open(map, marker);
  });

  map.setCenter(clinicLoc);
  console.log("map set to center at: " + browser_loc.coords.latitude + "||" + browser_loc.coords.longitude);

}

function animateCircle() {
  var count = 0;
  window.setInterval(function() {
    count = (count + 1) % 200;

    var icons = linePath.get('icons');
    icons[0].offset = (count / 2) + '%';
    linePath.set('icons', icons);
  }, 20);
}

function addLatLng(event) {
  var path = poly.getPath();
  // Because path is an MVCArray, we can simply append a new coordinate
  // and it will automatically appear.
  path.push(event.latLng);
}

function createPolyline(map, lineCoordinates, lineSymbol) {
  linePath = new google.maps.Polyline({
    path: lineCoordinates,
    geodesic: true,
    strokeColor: '#FF0000',
    strokeOpacity: 1.0,
    strokeWeight: 2,
    icons: [{
      icon: lineSymbol,
      offset: '100%'
    }]
  });
  linePath.setMap(map);
}

function createInfoWindow(text) {
  var infowindow = new google.maps.InfoWindow({
    content: text
  });
  return infowindow;
}

function getCurrentPosition(e) {
  var markercoords = new google.maps.LatLng(e.latLng.lat(), e.latLng.lng());
  return markercoords;
}


function toggleBounce() {
  if (marker.getAnimation() !== null) {
  marker.setAnimation(null);
  } else {
  marker.setAnimation(google.maps.Animation.BOUNCE);
  }
}

function createMarker(coords, map, title, dragable) {
  marker = new google.maps.Marker({
    position: coords,
    map: map,
    title: title,
    draggable: dragable,
    animation: google.maps.Animation.DROP
  });
  return marker;
}
function createCustomMarker(coords, map, title, dragable) {
  marker = new google.maps.Marker({
    position: coords,
    map: map,
    title: title,
    icon: "<%= asset_path('dr_icon.png') %>",
    draggable: dragable,
    animation: google.maps.Animation.DROP
  });
  return marker;
}

function loadScript() {
  console.log("map loading ...");
  var script = document.createElement('script');
  script.type = 'text/javascript';
    script.src = 'https://maps.googleapis.com/maps/api/js?key=AIzaSyCHC3pq8j8gzrqJhbjcZZALu1_UwYsjhSE&callback=initMapWithNear';
  document.body.appendChild(script);
}

function loadAllClinicScript() {
  console.log("map loading ...");
  var script = document.createElement('script');
  script.type = 'text/javascript';
  script.src = 'https://maps.googleapis.com/maps/api/js?key=AIzaSyCHC3pq8j8gzrqJhbjcZZALu1_UwYsjhSE&callback=initMapWithAll';
  document.body.appendChild(script);
}

function loadMapWithOneLoc(lat,lng,name) {
  clinic_lat = lat;
  clinic_lng = lng;
  clinic_name = name;
  var script = document.createElement('script');
  script.type = 'text/javascript';
  console.log("map loading with lat:"+lat+" and long "+lng);
  script.src = "https://maps.googleapis.com/maps/api/js?key=AIzaSyCHC3pq8j8gzrqJhbjcZZALu1_UwYsjhSE&callback=initBlankMapClinicLoc";
  
  document.body.appendChild(script);
}