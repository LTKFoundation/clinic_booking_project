var map;
var uber_map;
var poly;
var linePath;
var marker //var for new clinic marker
var clinic_lat = 0;
var clinic_lng = 0;
var clinic_name = "";
var dr_uber_pool = new HashTable();
var uber_request_pool = new HashTable();
var dr_self_marker;
var dr_self_window;
var cur_lat = 0;
var cur_lng = 0;



function initMapUserViewUber() {
  console.log("Initializing map....");
  uber_map = new google.maps.Map(document.getElementById('map-canvas'), {
    zoom: 15
  });

  // Try HTML5 geolocation.
  console.log("Getting location data....");
  if (navigator.geolocation) {
    var marker;
    navigator.geolocation.getCurrentPosition(function(position) {
      browser_loc = {
        lat: position.coords.latitude,
        lng: position.coords.longitude
      };
      user_lat = $('input[id=user_request_lat]');
      user_lat.val(position.coords.latitude);
      user_lng = $('input[id=user_request_lng]');
      user_lng.val(position.coords.longitude);

      // Displaying User's Current Location
      var user_window = new google.maps.InfoWindow({ content: "You are here" });
      
      console.log("creating current location marker ");
      marker = createMarker(browser_loc, uber_map, "You are here",true);
      user_window.open(uber_map, marker);
      google.maps.event.addListener(marker, 'click', function() {
        user_window.open(uber_map, marker);
      });

      google.maps.event.addListener(marker, 'dragend', function() 
      {
        console.log("Marker moved to " + marker.getPosition().lat() + "||" + marker.getPosition().lng() + "...");
        strAdd = getAddForUser(marker.getPosition());
      });
      uber_map.setCenter(browser_loc);
      console.log("map set to center at: " + position.coords.latitude + "||" + position.coords.longitude);
      strAdd = getAddForUser(marker.getPosition());
    }, function() {
      var infoWindow = new google.maps.InfoWindow({ map: uber_map });
      handleLocationError(true, infoWindow, uber_map.getCenter(), "");
    });
  } else {
    // Browser doesn't support Geolocation
    var infoWindow = new google.maps.InfoWindow({ map: uber_map });
    handleLocationError(false, infoWindow, uber_map.getCenter(), "");
  }
}

function displayUserRequest(lat, lng, user_name){
  console.log("preparing to display marker for user: "+user_name+"at lat:#{lat} and lng:#{lng}");
  var pos = {
    lat: lat,
    lng: lng
  };
  var user_marker = createUserRequestMarker(pos, map, user_name, false);
  var user_window = new google.maps.InfoWindow({ content: user_name });
  user_window.open(map, user_marker);
  google.maps.event.addListener(user_marker, 'click', function() {
    user_window.open(map, user_marker);
  });
}

function showUserHomeRequest(lat, lng, user_id, user_name, user_phone, user_address, budget) {
  $('input[id=user_request_lat]').val(lat);
  $('input[id=user_request_lng]').val(lng);
  
  var pos = {
    lat: lat,
    lng: lng
  };
  var user_marker;
  if(uber_request_pool.hasItem(user_id))
  {
    console.log("New request from: "+user_name);
    user_marker = uber_request_pool.getItem(user_id);
    user_marker.setMap(null);
  }
  user_marker = createUserRequestMarker(pos, map, user_name, false);
  
  uber_request_pool.setItem(user_id,user_marker);

    var contentString = '<div class="clinic col s12"> '+
'  <div class="card"> '+
'    <div class="card-content"> '+
'        <div class="basic-info" style="margin-top: 10px;"> '+
'          <p> '+
'            <i class="material-icons">account_circle</i> '+
'                <b>'+user_name+'</b> '+
'          </p> '+
'          <p> '+
'            <i class="material-icons">settings_phone</i> '+
'                <b>'+user_phone+'</b> '+
'          </p> '+
'          <p> '+
'            <i class="material-icons">payment</i> '+
'                '+budget+' '+
'          </p> '+
'          <p> '+
'                <button class="btn btn-primary" onclick="serveThisRequest('+user_id+','+lat+','+lng+',\''+user_name+'\',\''+user_phone+'\',\''+user_address+'\','+budget+')">Serve This</a> '+
'          </p> '+
'</div></div></div></div>';

  var user_window = new google.maps.InfoWindow({ content: contentString });
  google.maps.event.addListener(user_marker, 'click', function() {
    user_window.open(map, user_marker);
  });
  strNo = uber_request_pool.length;
  document.getElementById('user_request_avail').innerHTML = "<span class='red-text text-darken-2'>There are currently "+
  strNo+" User requesting for HOME Service</span>";
}

function showUberDoctor(lat, lng, dr_name, doctor_id, doctor_avatar, cost) {
  var pos = {
    lat: lat,
    lng: lng
  };
  var marker;
  if(dr_uber_pool.hasItem(doctor_id))
  {
    console.log("Setting new loc for existing doctor: "+dr_name);
    marker = dr_uber_pool.getItem(doctor_id);
    marker.setMap(null);
  }
  marker = createUberMarker(pos, uber_map, dr_name, false);
  dr_uber_pool.setItem(doctor_id,marker);
  strNo = dr_uber_pool.length;
  document.getElementById('uber_doctor_avais').innerHTML = "<span class='red-text text-darken-2'>There are currently "+
  strNo+" Doctor available for home visit service</span>";

  display_photo = doctor_avatar;
  if(display_photo=="")
  {
    display_photo = 'http://sainathchillapuram.com/BS/mediplus/demos/hospital/html-fullwidth/images/doctors/doctor-bio-img6.jpg';
  }
    var contentString = '<div class="clinic col s12"> '+
'  <div class="card"> '+
'    <div class="card-image"> '+
        '<img class="clinic-photo" src="'+display_photo+'">'+
'    </div> '+
'    <div class="card-content"> '+
'        <div class="basic-info" style="margin-top: 10px;"> '+
'          <p> '+
'            <i class="material-icons">account_circle</i> '+
'                <a href="/doctors/'+doctor_id+'">'+dr_name+'</a> '+
'          </p> '+
'          <p> '+
'            <i class="material-icons">payment</i> '+
'                '+cost+' '+
'          </p> '+
'          <p> '+
'                <button class="btn btn-primary" onclick="bookDoctor('+doctor_id+',\''+dr_name+'\''+','+lat+','+lng+',\''+cost+'\')">Book now</a> '+
'          </p> '+
'</div></div></div></div>';

  var user_window = new google.maps.InfoWindow({ content: contentString });
  <%#user_window.open(uber_map, marker);%>
  google.maps.event.addListener(marker, 'click', function() {
    user_window.open(uber_map, marker);
  });
}
var new_lat;
var new_lng;
var new_loc;
var new_pos;
var initLocDetected = false;
function initMapForUberDr() {
  console.log("Initializing map....");
  map = new google.maps.Map(document.getElementById('map-canvas'), {
    zoom: 15
  });
    // Try HTML5 geolocation.
    if (navigator.geolocation) {
      console.log("Current loc: lat-"+cur_lat+" | lng-"+cur_lng);

      navigator.geolocation.getCurrentPosition(function(position) {
        if(!initLocDetected){
          browser_loc = {
            lat: position.coords.latitude,
            lng: position.coords.longitude
          };
          new_pos = position;
          new_loc = browser_loc;
          new_lat = browser_loc.lat;
          new_lng = browser_loc.lng;
          console.log("Browser loc: lat-"+browser_loc.lat+" | lng-"+browser_loc.lng);
          console.log("NEW loc: lat-"+new_lat+" | lng-"+new_lng);

          console.log("Doctor is at: lat-"+new_lat+" | lng-"+new_lng);
          // Displaying User's Current Location
          dr_self_window = new google.maps.InfoWindow({ content: "You are here" });
          dr_self_marker = createUberMarker(new_loc, map, "You are here",true);
          dr_self_window.open(map, dr_self_marker);
          google.maps.event.addListener(dr_self_marker, 'click', function() {
            dr_self_window.open(map, dr_self_marker);
          });
          google.maps.event.addListener(dr_self_marker, 'dragend', function() 
          {
            cur_lat = dr_self_marker.getPosition().lat();
            cur_lng = dr_self_marker.getPosition().lng();
            document.getElementById("uber_lat").value = cur_lat;
            document.getElementById("uber_lng").value = cur_lng;
            console.log("dr_self_marker moved to " + dr_self_marker.getPosition().lat() + "||" + dr_self_marker.getPosition().lng() + "...");
            sendLoc(cur_lat,cur_lng);
          });
          map.setCenter(new_loc);
          console.log("map set to center at: " + new_pos.coords.latitude + "||" + new_pos.coords.longitude);
          sendLoc(browser_loc.lat,browser_loc.lng);
          initLocDetected = true;
        }
        }, function() {
          var infoWindow = new google.maps.InfoWindow({ map: map });
          handleLocationError(true, infoWindow, map.getCenter(), "");
        });
        
        navigator.geolocation.watchPosition(function (position) {
          setMarkerPosition(
            dr_self_marker, position
          );
      });
    } 
    else {
      // Browser doesn't support Geolocation
      var infoWindow = new google.maps.InfoWindow({ map: map });
      handleLocationError(false, infoWindow, map.getCenter(), "");
    }

}

function production_initMapForUberDr() {
  console.log("Initializing map....");
  map = new google.maps.Map(document.getElementById('map-canvas'), {
    zoom: 15
  });
  setInterval(function(){
    // Try HTML5 geolocation.
    if (navigator.geolocation) {
      console.log("Current loc: lat-"+cur_lat+" | lng-"+cur_lng);

      navigator.geolocation.getCurrentPosition(function(position) {
        browser_loc = {
          lat: position.coords.latitude,
          lng: position.coords.longitude
        };
        new_pos = position;
        new_loc = browser_loc;
        new_lat = browser_loc.lat;
        new_lng = browser_loc.lng;
        console.log("Browser loc: lat-"+browser_loc.lat+" | lng-"+browser_loc.lng);

        }, function() {
          var infoWindow = new google.maps.InfoWindow({ map: map });
          handleLocationError(true, infoWindow, map.getCenter(), "");
        });

        console.log("NEW loc: lat-"+new_lat+" | lng-"+new_lng);

          cur_lat = new_lat;
          cur_lng = new_lng;
          console.log("Doctor is at: lat-"+new_lat+" | lng-"+new_lng);
          if(dr_self_marker!=null)
          {
            dr_self_marker.setMap(null);
            dr_self_window.close();
          }
          // Displaying User's Current Location
          dr_self_window = new google.maps.InfoWindow({ content: "You are here" });
          dr_self_marker = createUberMarker(new_loc, map, "You are here",true);
          dr_self_window.open(map, dr_self_marker);
          google.maps.event.addListener(dr_self_marker, 'click', function() {
            dr_self_window.open(map, dr_self_marker);
          });
          google.maps.event.addListener(dr_self_marker, 'dragend', function() 
          {
            cur_lat = dr_self_marker.getPosition().lat();
            cur_lng = dr_self_marker.getPosition().lng();
            document.getElementById("uber_lat").value = cur_lat;
            document.getElementById("uber_lng").value = cur_lng;
            console.log("dr_self_marker moved to " + dr_self_marker.getPosition().lat() + "||" + dr_self_marker.getPosition().lng() + "...");
            sendLoc(cur_lat,cur_lng);
          });
          map.setCenter(new_loc);
          console.log("map set to center at: " + new_pos.coords.latitude + "||" + new_pos.coords.longitude);
          sendLoc(cur_lat,cur_lng);
        
        navigator.geolocation.watchPosition(function (position) {
          setMarkerPosition(
            dr_self_marker, position
          );
      });
    } 
    else {
      // Browser doesn't support Geolocation
      var infoWindow = new google.maps.InfoWindow({ map: map });
      handleLocationError(false, infoWindow, map.getCenter(), "");
    }

  }, 5000);
}

function setMarkerPosition(marker, position) {
  marker.setPosition(
    new google.maps.LatLng(
      position.coords.latitude,
      position.coords.longitude)
  );
}
function getAddForUser(pos)
{
  console.log("getting address for loc: " + pos.lat + "||" + pos.lng);
  strAdd = "";
   geocoder = new google.maps.Geocoder();
   geocoder.geocode
  ({
    latLng: pos
  }, 
    function(results, status) 
    {
      if (status == google.maps.GeocoderStatus.OK) 
      {
        strAdd = results[0].formatted_address;
        document.getElementById('user_request_address').innerHTML = strAdd;
      } 
      else 
      {
        console.log("Cannot determine address at this location."+status);
        strAdd = "Can not get address for this location";
        document.getElementById('user_request_address').innerHTML = strAdd;
      }
    }
  );
}
function getAddFromPos(pos) 
{
  console.log("getting address for loc: " + pos.lat + "||" + pos.lng);
   geocoder = new google.maps.Geocoder();
   geocoder.geocode
  ({
    latLng: pos
  }, 
    function(results, status) 
    {
      if (status == google.maps.GeocoderStatus.OK) 
      {
        strAdd = results[0].formatted_address;
        console.log("found address:"+strAdd); 
        document.getElementById("clinic_address").value = strAdd;
      } 
      else 
      {
        console.log("Cannot determine address at this location."+status);
      }
    }
  );
}
//map for adding clinics
function initMapWithCurLoc() {
  map = new google.maps.Map(document.getElementById('map-canvas'), {
    zoom: 15
  });

  // Try HTML5 geolocation.
  
  if (navigator.geolocation) {
    var marker;
    navigator.geolocation.getCurrentPosition(function(position) {
      browser_loc = {
        lat: position.coords.latitude,
        lng: position.coords.longitude
      };
      document.getElementById("map-lat").value = browser_loc.lat;
      document.getElementById("map-lng").value = browser_loc.lng;
      // Displaying User's Current Location
      var user_window = new google.maps.InfoWindow({ content: "You are here" });
      
      console.log("creating current location marker ");
      marker = createMarker(browser_loc, map, "You are here",true);
      user_window.open(map, marker);
      google.maps.event.addListener(marker, 'click', function() {
        user_window.open(map, marker);
      });

      google.maps.event.addListener(marker, 'dragend', function() 
      {
        document.getElementById("map-lat").value = marker.getPosition().lat();
        document.getElementById("map-lng").value = marker.getPosition().lng();
        console.log("Marker moved to " + marker.getPosition().lat() + "||" + marker.getPosition().lng() + "...");
        getAddFromPos(marker.getPosition());

      });
 
      map.setCenter(browser_loc);
      console.log("map set to center at: " + position.coords.latitude + "||" + position.coords.longitude);

    }, function() {
      var infoWindow = new google.maps.InfoWindow({ map: map });
      handleLocationError(true, infoWindow, map.getCenter(), "");
    });

    navigator.geolocation.watchPosition(function (position) {
      setMarkerPosition(
        marker, position
      );
    });
  } else {
    // Browser doesn't support Geolocation
    var infoWindow = new google.maps.InfoWindow({ map: map });
    handleLocationError(false, infoWindow, map.getCenter(), "");
  }
}

function addClinic(lat, lng) {
  console.log("passing New Clinic Data to controller " + lat + "||" + lng + "...");
  $.post('/clinics/add_clinic', { name: "Dr. Slum", latitude: lat, longtitude: lng, doctor_id:"-1", address:"somewhere over the rainbow" });
}

function showDoctor(lat, lng, clinic_name, clinic_add, dr_name, clinic_photo, clinic_id, gig_id, doctor_id, doctor_avatar) {
  var pos = {
    lat: lat,
    lng: lng
  };
  var marker = createCustomMarker(pos, map, dr_name, false);

  display_photo = doctor_avatar;
  if(display_photo==null)
  {
    display_photo = clinic_photo;
    if(display_photo==null)
    {
      display_photo = 'http://sainathchillapuram.com/BS/mediplus/demos/hospital/html-fullwidth/images/doctors/doctor-bio-img6.jpg';
    }
  }

    var contentString = 
'<div class="clinic col s12"> '+
'  <div class="card"> '+
'    <div class="card-image"> '+
        '<img class="clinic-photo" src="'+display_photo+'">'+
'    </div> '+
'    <div class="card-content"> '+
'      <div class="row"> '+
'        <div class="basic-info" style="margin-top: 10px;"> '+
'          <p> '+
'            <i class="material-icons">home</i> '+
'                <a href="/clinics/'+clinic_id+'">'+clinic_name+'</a> '+
'          </p> '+
'          <p> '+
'            <i class="material-icons">place</i>'+clinic_add+
'          </p></div></div></div></div></div>';

  if(dr_name!=null){
contentString = 
'<div class="clinic col s12"> '+
'  <div class="card"> '+
'    <div class="card-image"> '+
        '<img class="clinic-photo" src="'+display_photo+'">'+
'    </div> '+
'    <div class="card-content"> '+
'      <div class="row"> '+
'        <div class="basic-info" style="margin-top: 10px;"> '+
'          <p> '+
'            <i class="material-icons">home</i> '+
'                <a href="/clinics/'+clinic_id+'">'+clinic_name+'</a> '+
'          </p> '+
'          <p> '+
'            <i class="material-icons">account_circle</i> '+
'                <a href="/doctors/'+doctor_id+'">'+dr_name+'</a> '+
'          </p> '+
'          <p> '+
'            <i class="material-icons">place</i>'+clinic_add+
'          </p> '+
'          <p> '+
'                <a href="doctors/'+doctor_id+'/gigs/'+gig_id+'/client_view">Đặt khám ngay</a> '+
'          </p> '+
'</div></div></div></div></div>';
  }



  var user_window = new google.maps.InfoWindow({ content: contentString });
  <%#user_window.open(map, marker);%>
  google.maps.event.addListener(marker, 'click', function() {
    user_window.open(map, marker);
  });
}

function displayDoctors() {
  console.log("Displaying all doctor");
  a = gon.doctor_clinics;
    console.log("showing "+a.length+"clinics");
  if (a != null) {
    for (var i = 0; i < a.length; i++) {
            console.log("Doctor number " + i);
      var doctor = a[i];
      showDoctor(doctor[0], doctor[1], doctor[2], doctor[3], doctor[9], doctor[7], doctor[4], doctor[5], doctor[6], doctor[11]);
    }
  }
}

function refreshMap() {
  console.log("MAP REFRESHEEEEEDDDD!!!!!!!!!");
  displayDoctors();
}

function setLoc(lat, lng) {
  console.log("passing loc to controller#current_loc with value: " + lat + "||" + lng + "...");
    $.post('/clinics/current_loc', { latitude: lat, longtitude: lng }, refreshMap);
}

function handleLocationError(browserHasGeolocation, infoWindow, pos, message) {
  infoWindow.setPosition(pos);
  infoWindow.setContent(browserHasGeolocation ?
    'Error: The Geolocation service failed.' + message :
    'Error: Your browser doesn\'t support geolocation.' + message);
}
var browser_loc;

function getCurrentLoc() {
  console.log("getting current loc ...");
  var infoWindow = new google.maps.InfoWindow({ content: "Current Location" });
  // Try HTML5 geolocation.
  if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(function(position) {
      browser_loc = {
        lat: position.coords.latitude,
        lng: position.coords.longitude
      };
      //console.log("current log is:"+browser_loc[0]+"||"+browser_loc[1]);
    }, function(error) {
      handleLocationError(true, infoWindow, map.getCenter(), 'ERROR(' + err.code + '): ' + err.message);
    });
  } else {
    // Browser doesn't support Geolocation
    handleLocationError(false, infoWindow, map.getCenter(), "");
  }
}

function initMapWithNear() {
  var mapOptions = {
    center: new google.maps.LatLng(21.0278, 105.8342),
    zoom: 15,
    mapTypeId: google.maps.MapTypeId.NORMAL
  };
  // initializing map
  map = new google.maps.Map(document.getElementById("map-canvas"), mapOptions);

  // Try HTML5 geolocation.
  
  if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(function(position) {
      browser_loc = {
        lat: position.coords.latitude,
        lng: position.coords.longitude
      };
      console.log("found current loc! ");

      //setLoc(position.coords.latitude, position.coords.longitude);
            setLoc(position.coords.latitude, position.coords.longitude);

      // Displaying User's Current Location
      var user_window = new google.maps.InfoWindow({ content: "You are here" });
      var marker;
      console.log("creating current location marker ");
      marker = createMarker(browser_loc, map, "You are here",false);
      user_window.open(map, marker);
      google.maps.event.addListener(marker, 'click', function() {
        user_window.open(map, marker);
      });

      map.setCenter(browser_loc);
      console.log("map set to center at: " + position.coords.latitude + "||" + position.coords.longitude);

    }, function() {
      var infoWindow = new google.maps.InfoWindow({ map: map });
      handleLocationError(true, infoWindow, map.getCenter(), "");
    });
  } else {
    // Browser doesn't support Geolocation
    var infoWindow = new google.maps.InfoWindow({ map: map });
    handleLocationError(false, infoWindow, map.getCenter(), "");
  }

  google.maps.event.addListener(map, 'click', function(e) {
    var markerClinicDrop = createCustomMarker(getCurrentPosition(e), map, "New Clinic!", true);
    var dr_info = createInfoWindow("Phòng khám mới ở đây: " + e.latLng.lat() + "||" + e.latLng.lng());
    dr_info.open(map, markerClinicDrop);
    addClinic(e.latLng.lat(), e.latLng.lng())
  });
}

function initMapWithAll() {
  var mapOptions = {
    zoom: 15,
    mapTypeId: google.maps.MapTypeId.NORMAL
  };
  // initializing map
  map = new google.maps.Map(document.getElementById("map-canvas"), mapOptions);
    displayDoctors();
  // Try HTML5 geolocation.
  if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(function(position) {
      browser_loc = {
        lat: position.coords.latitude,
        lng: position.coords.longitude
      };
      console.log("found current loc! ");

      // Displaying User's Current Location
      var user_window = new google.maps.InfoWindow({ content: "You are here" });
      var marker;
      console.log("creating current location marker ");
      marker = createMarker(browser_loc, map, "You are here",true);
      user_window.open(map, marker);
      google.maps.event.addListener(marker, 'click', function() {
        user_window.open(map, marker);
      });

      map.setCenter(browser_loc);
      console.log("map set to center at: " + position.coords.latitude + "||" + position.coords.longitude);
    }, function(error) {
      console.log('ERROR(' + error.code + '): ' + error.message);
      var infoWindow = new google.maps.InfoWindow({ map: map });
      handleLocationError(true, infoWindow, map.getCenter(), 'ERROR(' + error.code + '): ' + error.message);
    });
  } else {
    // Browser doesn't support Geolocation
    var infoWindow = new google.maps.InfoWindow({ map: map });
    handleLocationError(false, infoWindow, map.getCenter(), "");
  }
}

function initBlankMapClinicLoc() {
  var mapOptions = {
    zoom: 15,
    mapTypeId: google.maps.MapTypeId.NORMAL
  };
  // initializing map
  map = new google.maps.Map(document.getElementById("map-canvas"), mapOptions);

  var clinicLoc = new google.maps.LatLng(clinic_lat, clinic_lng) 
  var pos = {
    lat: parseFloat(clinic_lat),
    lng: parseFloat(clinic_lng)
  };

  // Displaying User's Current Location
  var user_window = new google.maps.InfoWindow({ content: clinic_name });
  var marker = createCustomMarker(pos, map, clinic_name,true);
  user_window.open(map, marker);
  console.log("creating current location marker ");
  google.maps.event.addListener(marker, 'click', function() {
    user_window.open(map, marker);
  });

  map.setCenter(clinicLoc);
  console.log("map set to center at: " + browser_loc.coords.latitude + "||" + browser_loc.coords.longitude);

}

function animateCircle() {
  var count = 0;
  window.setInterval(function() {
    count = (count + 1) % 200;

    var icons = linePath.get('icons');
    icons[0].offset = (count / 2) + '%';
    linePath.set('icons', icons);
  }, 20);
}

function addLatLng(event) {
  var path = poly.getPath();
  // Because path is an MVCArray, we can simply append a new coordinate
  // and it will automatically appear.
  path.push(event.latLng);
}

function createPolyline(map, lineCoordinates, lineSymbol) {
  linePath = new google.maps.Polyline({
    path: lineCoordinates,
    geodesic: true,
    strokeColor: '#FF0000',
    strokeOpacity: 1.0,
    strokeWeight: 2,
    icons: [{
      icon: lineSymbol,
      offset: '100%'
    }]
  });
  linePath.setMap(map);
}

function createInfoWindow(text) {
  var infowindow = new google.maps.InfoWindow({
    content: text
  });
  return infowindow;
}

function getCurrentPosition(e) {
  var markercoords = new google.maps.LatLng(e.latLng.lat(), e.latLng.lng());
  return markercoords;
}


function toggleBounce() {
  if (marker.getAnimation() !== null) {
  marker.setAnimation(null);
  } else {
  marker.setAnimation(google.maps.Animation.BOUNCE);
  }
}

function createMarker(coords, map, title, dragable) {
  marker = new google.maps.Marker({
    position: coords,
    map: map,
    title: title,
    draggable: dragable
  });
  return marker;
}
function createCustomMarker(coords, map, title, dragable) {
  marker = new google.maps.Marker({
    position: coords,
    map: map,
    title: title,
    icon: "<%= asset_path('dr_icon.png') %>",
    draggable: dragable,
    animation: google.maps.Animation.DROP
  });
  return marker;
}
function createUserRequestMarker(coords, map, title, dragable) {
  console.log("building marker...");
  marker = new google.maps.Marker({
    position: coords,
    map: map,
    title: title,
    icon: "<%= asset_path('user_request_icon.png') %>",
    draggable: dragable
  });
  return marker;
}
function createUberMarker(coords, map, title, dragable) {
  marker = new google.maps.Marker({
    position: coords,
    map: map,
    title: title,
    icon: "<%= asset_path('medicuber.png') %>",
    draggable: dragable
  });
  return marker;
}
var directionsService;
var directionsDisplay;

function showRoute(a_lat,a_lng,b_lat,b_lng,current_map) {
  console.log("starting showing route...."+a_lat+":"+a_lng+"||"+b_lat+":"+b_lng);
  var origin = new google.maps.LatLng(
      a_lat,a_lng);
  var destination = new google.maps.LatLng(
      b_lat,b_lng);
  if (directionsDisplay!=null)
  {
    directionsDisplay.setMap(null);
    directionsDisplay = null;
  }
  if(directionsService==null)
  {
    directionsService = new google.maps.DirectionsService;
  }
  directionsDisplay = new google.maps.DirectionsRenderer;
  directionsDisplay.setMap(current_map);
  calculateAndDisplayRoute(directionsService, directionsDisplay,origin,destination);
}

function calculateAndDisplayRoute(directionsService, directionsDisplay, origin, destination) {
  console.log("calculating routes....");
  var waypts = [];

  console.log("Displaying routes....");
  directionsService.route({
    origin: origin,
    destination: destination,
    waypoints: waypts,
    optimizeWaypoints: true,
    travelMode: 'DRIVING'
  }, function(response, status) {
    if (status === 'OK') {
      console.log("Setting direction....");
      directionsDisplay.setDirections(response);
    } else {
      window.alert('Directions request failed due to ' + status);
  }
});
}


function loadScript() {
  console.log("map loading ...");
  var script = document.createElement('script');
  script.type = 'text/javascript';
    script.src = 'https://maps.googleapis.com/maps/api/js?key=AIzaSyCHC3pq8j8gzrqJhbjcZZALu1_UwYsjhSE&callback=initMapWithNear';
  document.body.appendChild(script);
}

function loadAllClinicScript() {
  console.log("map loading ...");
  var script = document.createElement('script');
  script.type = 'text/javascript';
  script.src = 'https://maps.googleapis.com/maps/api/js?key=AIzaSyCHC3pq8j8gzrqJhbjcZZALu1_UwYsjhSE&callback=initMapWithAll';
  document.body.appendChild(script);
}

function loadMapWithOneLoc(lat,lng,name) {
  clinic_lat = lat;
  clinic_lng = lng;
  clinic_name = name;
  var script = document.createElement('script');
  script.type = 'text/javascript';
  console.log("map loading with lat:"+lat+" and long "+lng);
  script.src = "https://maps.googleapis.com/maps/api/js?key=AIzaSyCHC3pq8j8gzrqJhbjcZZALu1_UwYsjhSE&callback=initBlankMapClinicLoc";
  
  document.body.appendChild(script);
}

function startDoctorUber()
{
  console.log("loading uber for doctor ...");
  var script = document.createElement('script');
  script.type = 'text/javascript';
  script.src = 'https://maps.googleapis.com/maps/api/js?key=AIzaSyCHC3pq8j8gzrqJhbjcZZALu1_UwYsjhSE&callback=production_initMapForUberDr';
  document.body.appendChild(script); 
}

function startSimulatorUber()
{
  console.log("loading uber for doctor ...");
  var script = document.createElement('script');
  script.type = 'text/javascript';
  script.src = 'https://maps.googleapis.com/maps/api/js?key=AIzaSyCHC3pq8j8gzrqJhbjcZZALu1_UwYsjhSE&callback=initMapForUberDr';
  document.body.appendChild(script); 
}